package controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import service.CommentService;
import service.CommentServiceImpl;


@WebServlet("/cmt/*")
public class CommentController extends HttpServlet {
	private static final long serialVersionUID = 1L;
    private static final Logger log=LoggerFactory.getLogger(CommentController.class);
    //비동기 방식 =>페이지 이동 방식x
    //destPage 필요x requestdispatcher 필요x
    
    private CommentService csv;
    private int isOk;
    
    
    
    public CommentController() 
    {
    	csv=new CommentServiceImpl();
    }

	
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException 
	{
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		//response의 ContentType설정할 필요x
		
		String uri=request.getRequestURI();
		// /brd/detail?bno=1; =>동기방식 주소체계
		// 동기방식 => get,post
		// /cmt/list/10 => RestAPI 방식
		// get => 리스트를 보여줄때, post => 등록시, put => update, delete => delete
		String pathuri = uri.substring("/cmt/".length()); //post,list/10
		String path = pathuri;
		String pathVar=""; //없으며ㅓㄴ 공백처리
		if(pathuri.contains("/"))
		{
			path=pathuri.substring(0,pathuri.lastIndexOf("/")); //list
			pathVar=pathuri.substring(pathuri.lastIndexOf("/")+1);
		}
		log.info(">>> uri > "+uri);
		log.info(">>> pathuri > "+pathuri);
		log.info(">>> pathVar > "+pathVar);
		
		switch (path) 
		{
		case "post":
			try {
				
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		}
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException 
	{
		service(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException 
	{
		service(request, response);
	}

}
